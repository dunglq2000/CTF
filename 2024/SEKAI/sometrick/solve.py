# bob says 962172674290101419326111524912340364015968146190868082155895099644762946044932064235085158008853387940326502396320791608818746145123172149128847570111332546537205884333142518663727964673916791400712352102626704718655806162128252701202784500791839758098578305667107787442016167843301800902861446906547701825871
# alice says 997263230613291367826540687075985090544999992929787391718085635944074867808236082855502702782656208604833646080450963233501453110650649677477892623767182951893506995477410904481235391355098089975829165486760886556709883562905768103082390680015723454242656012564042863221063236101923269400744001390929486033989
# bob says 712429179826308446449149040740159189346199527037636312514037415661760120530432165825415719872317571840465185572361460761280511859883112751576868257521467074621012885761120443670283286965505136702089725997183803020691540595817506689941085251408143583865176379299484406005295686122403733380893118435176530314386

import random
from secrets import randbelow, randbits

random.seed(1024)

def gen(n):
    p, i = [0] * n, 0
    for j in random.sample(range(1, n), n - 1):
        p[i], i = j, j
    return tuple(p)

def num_to_vec(num):
    res = []
    for _ in range(n):
        res.append(num % m)
        num //= m
    return res


def gexp(g, e):
    res = tuple(g)
    while e:
        if e & 1:
            res = tuple(res[i] for i in g)
        e >>= 1
        g = tuple(g[i] for i in g)
    return res


GSIZE = 8209
GNUM = 79

LIM = GSIZE**GNUM

m = GSIZE
n = GNUM

G = [gen(GSIZE) for i in range(GNUM)]


PB = 962172674290101419326111524912340364015968146190868082155895099644762946044932064235085158008853387940326502396320791608818746145123172149128847570111332546537205884333142518663727964673916791400712352102626704718655806162128252701202784500791839758098578305667107787442016167843301800902861446906547701825871
PA = 997263230613291367826540687075985090544999992929787391718085635944074867808236082855502702782656208604833646080450963233501453110650649677477892623767182951893506995477410904481235391355098089975829165486760886556709883562905768103082390680015723454242656012564042863221063236101923269400744001390929486033989
PC = 712429179826308446449149040740159189346199527037636312514037415661760120530432165825415719872317571840465185572361460761280511859883112751576868257521467074621012885761120443670283286965505136702089725997183803020691540595817506689941085251408143583865176379299484406005295686122403733380893118435176530314386

h = num_to_vec(PB)
f = num_to_vec(PA)
w = num_to_vec(PC)

print(h[0], f[0], w[0])