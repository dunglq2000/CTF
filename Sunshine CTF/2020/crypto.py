Python 3.8.6 (tags/v3.8.6:db45529, Sep 23 2020, 15:52:53) [MSC v.1927 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license()" for more information.
>>> c="⭐🌈🍀 ⭐🌈🦄 ⭐🦄🌈 ⭐🎈🍀 ⭐🦄🌑 ⭐🌈🦄 ⭐🌑🍀 ⭐🦄🍀 ⭐🎈⭐ 🦄🦄 ⭐🦄🎈 ⭐🌑🍀 ⭐🌈🌑 ⭐🌑⭐ ⭐🦄🌑 🦄🦄 ⭐🌑🦄 ⭐🦄🌈 ⭐🌑🍀 ⭐🦄🎈 ⭐🌑🌑 ⭐🦄⭐ ⭐🦄🌈 ⭐🌑🎈 🦄🦄 ⭐🦄⭐ ⭐🌈🍀 🦄🦄 ⭐🌈🌑 ⭐🦄💜 ⭐🌑🦄 🦄🦄 ⭐🌑🐴 ⭐🌑🦄 ⭐🌈🍀 ⭐🌈🌑 🦄🦄 ⭐🌑🦄 ⭐🦄🌈 ⭐🌑🍀 ⭐🦄🎈 ⭐🌑🌑 ⭐🦄⭐ ⭐🦄🌈 ⭐🌑🎈 🦄🦄 ⭐🦄🦄 ⭐🌑🦄 ⭐🌈🌑 ⭐🦄💜 ⭐🦄🎈 ⭐🌑🌑 ⭐🎈🦄"
>>> set([1,2,1,3])
{1, 2, 3}
>>> set(c.split(" "))
{'⭐🌑⭐', '⭐🦄🌈', '⭐🌑🦄', '⭐🌑🌑', '🦄🦄', '⭐🎈⭐', '⭐🦄🍀', '⭐🌈🦄', '⭐🦄🌑', '⭐🎈🍀', '⭐🦄💜', '⭐🌈🌑', '⭐🦄🎈', '⭐🌑🐴', '⭐🎈🦄', '⭐🌑🎈', '⭐🌈🍀', '⭐🌑🍀', '⭐🦄⭐', '⭐🦄🦄'}
>>> cc=[]
>>> for i in c:
	if i != " ":
		cc.append(i)

		
>>> cc
['⭐', '🌈', '🍀', '⭐', '🌈', '🦄', '⭐', '🦄', '🌈', '⭐', '🎈', '🍀', '⭐', '🦄', '🌑', '⭐', '🌈', '🦄', '⭐', '🌑', '🍀', '⭐', '🦄', '🍀', '⭐', '🎈', '⭐', '🦄', '🦄', '⭐', '🦄', '🎈', '⭐', '🌑', '🍀', '⭐', '🌈', '🌑', '⭐', '🌑', '⭐', '⭐', '🦄', '🌑', '🦄', '🦄', '⭐', '🌑', '🦄', '⭐', '🦄', '🌈', '⭐', '🌑', '🍀', '⭐', '🦄', '🎈', '⭐', '🌑', '🌑', '⭐', '🦄', '⭐', '⭐', '🦄', '🌈', '⭐', '🌑', '🎈', '🦄', '🦄', '⭐', '🦄', '⭐', '⭐', '🌈', '🍀', '🦄', '🦄', '⭐', '🌈', '🌑', '⭐', '🦄', '💜', '⭐', '🌑', '🦄', '🦄', '🦄', '⭐', '🌑', '🐴', '⭐', '🌑', '🦄', '⭐', '🌈', '🍀', '⭐', '🌈', '🌑', '🦄', '🦄', '⭐', '🌑', '🦄', '⭐', '🦄', '🌈', '⭐', '🌑', '🍀', '⭐', '🦄', '🎈', '⭐', '🌑', '🌑', '⭐', '🦄', '⭐', '⭐', '🦄', '🌈', '⭐', '🌑', '🎈', '🦄', '🦄', '⭐', '🦄', '🦄', '⭐', '🌑', '🦄', '⭐', '🌈', '🌑', '⭐', '🦄', '💜', '⭐', '🦄', '🎈', '⭐', '🌑', '🌑', '⭐', '🎈', '🦄']
>>> set(cc)
{'🍀', '🐴', '🎈', '🌈', '⭐', '🦄', '💜', '🌑'}
>>> len(set(cc))
8
>>> c.split(" ")
['⭐🌈🍀', '⭐🌈🦄', '⭐🦄🌈', '⭐🎈🍀', '⭐🦄🌑', '⭐🌈🦄', '⭐🌑🍀', '⭐🦄🍀', '⭐🎈⭐', '🦄🦄', '⭐🦄🎈', '⭐🌑🍀', '⭐🌈🌑', '⭐🌑⭐', '⭐🦄🌑', '🦄🦄', '⭐🌑🦄', '⭐🦄🌈', '⭐🌑🍀', '⭐🦄🎈', '⭐🌑🌑', '⭐🦄⭐', '⭐🦄🌈', '⭐🌑🎈', '🦄🦄', '⭐🦄⭐', '⭐🌈🍀', '🦄🦄', '⭐🌈🌑', '⭐🦄💜', '⭐🌑🦄', '🦄🦄', '⭐🌑🐴', '⭐🌑🦄', '⭐🌈🍀', '⭐🌈🌑', '🦄🦄', '⭐🌑🦄', '⭐🦄🌈', '⭐🌑🍀', '⭐🦄🎈', '⭐🌑🌑', '⭐🦄⭐', '⭐🦄🌈', '⭐🌑🎈', '🦄🦄', '⭐🦄🦄', '⭐🌑🦄', '⭐🌈🌑', '⭐🦄💜', '⭐🦄🎈', '⭐🌑🌑', '⭐🎈🦄']
>>> oct(ord('a'))
'0o141'
>>> a = {}
>>> for i, j in enumerate([3, 0, 7, 6, 1, 5, 2, 4]):
	a[list(set(cc))[i]] = j

	
>>> a
{'🍀': 3, '🐴': 0, '🎈': 7, '🌈': 6, '⭐': 1, '🦄': 5, '💜': 2, '🌑': 4}
>>> cipher = c.split(' ')
>>> cipher
['⭐🌈🍀', '⭐🌈🦄', '⭐🦄🌈', '⭐🎈🍀', '⭐🦄🌑', '⭐🌈🦄', '⭐🌑🍀', '⭐🦄🍀', '⭐🎈⭐', '🦄🦄', '⭐🦄🎈', '⭐🌑🍀', '⭐🌈🌑', '⭐🌑⭐', '⭐🦄🌑', '🦄🦄', '⭐🌑🦄', '⭐🦄🌈', '⭐🌑🍀', '⭐🦄🎈', '⭐🌑🌑', '⭐🦄⭐', '⭐🦄🌈', '⭐🌑🎈', '🦄🦄', '⭐🦄⭐', '⭐🌈🍀', '🦄🦄', '⭐🌈🌑', '⭐🦄💜', '⭐🌑🦄', '🦄🦄', '⭐🌑🐴', '⭐🌑🦄', '⭐🌈🍀', '⭐🌈🌑', '🦄🦄', '⭐🌑🦄', '⭐🦄🌈', '⭐🌑🍀', '⭐🦄🎈', '⭐🌑🌑', '⭐🦄⭐', '⭐🦄🌈', '⭐🌑🎈', '🦄🦄', '⭐🦄🦄', '⭐🌑🦄', '⭐🌈🌑', '⭐🦄💜', '⭐🦄🎈', '⭐🌑🌑', '⭐🎈🦄']
>>> flag = ''
>>> for i in cipher:
	tmp = a[i[0]]*64+a[i[1]]*8+a[i[2]]
	flag += chr(tmp)
>>> flag = ''
>>> for i in cipher:
	if len(i) == 3:
		tmp = a[i[0]]*64+a[i[1]]*8+a[i[2]]
	elif len(i) == 2:
		tmp = a[i[0]]*8+a[i[1]]
	flag += chr(tmp)

	
>>> flag
'sun{lucky-octal-encoding-is-tje-`est-encoding-metjod}'
>>> for i, j in enumerate([3, 2, 7, 6, 1, 5, 0, 4]):
	a[list(set(cc))[i]] = j

	
>>> a
{'🍀': 3, '🐴': 2, '🎈': 7, '🌈': 6, '⭐': 1, '🦄': 5, '💜': 0, '🌑': 4}
>>> flag= ''
>>> for i in cipher:
	if len(i) == 3:
		tmp = a[i[0]]*64+a[i[1]]*8+a[i[2]]
	elif len(i) == 2:
		tmp = a[i[0]]*8+a[i[1]]
	flag += chr(tmp)

	
>>> flag
'sun{lucky-octal-encoding-is-the-best-encoding-method}'
>>> 
